using GorillaTagScripts;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;
using Random = UnityEngine.Random;

namespace OMEGA.Backend.Librairies
{
    internal static class BricksHelper
    {
        internal static int[] pieceIDs = { -902878798, -1169840224, 24270440, -933358727, -751675075, -1194390666, 477262573, -1193326485, 1924370326, -1621444201, 1701825380, 661312857, 776850392, 1821589092, 1859614656, 1145900217, -993249117, -196038879, -385891195, -1927069002, -1446121736, 251444537, -1218055069, -1724819324, 1700655257, 1134055607, -1447051713, 2059548340, 1700948013, 1063967233, 1834228748, -845420418, 532163265, 1120512569, -648273975, 252298128, 1228919111, 1210710592, -1535427925, 539529939, 1961336659, 1895524638, -1821684029, 798264081, 111152940, -1324502924, -1441835191, 1925587737, -566818631, 1459635109, -1297167171, 1755661147, 724396559, -1326806786, 1794855203, 764108395, 1858470402, -1907504128, -982152628, -299821945, 2132175566, -516716750, 1138758120, 1944633234, -648326792, 1364190526, -412073841, 1930294554, 425644141, 616512822, -556749672, -676372285, -694301646, -533953913, 1685601286, -297072615, 2080623204, -482116696, 654087561, -2077612185, 239308064, 1102387446, 1477544431, 948224013, 19594543, -1206998199, -666919797, -1508642259, -2031647881, 405537871, 2104851213, 38505905, 1008893018, 1459246571, -1961511959, -2116490732, -1310012383, -57667458, 901971172, -1332927354, -1332749927, 1311435298, -638499394, 439542361, -990605037, -550481602, -1468322569, 606565178, 740733211, -918777796, -1752935859, 1536483603, 5654695, -2138108256, 2106518134 };
        internal static BuilderFactory factory;
        
        public static void GetFactory() =>
            factory = GameObject.FindObjectOfType<BuilderFactory>();
        
        public static void SpawnRandomPiece(Vector3 pos)
        {
            int id = pieceIDs[(int)Math.Floor((decimal)Random.Range(0, pieceIDs.Length))];
            int? matType = factory.GetPiecePrefab(id)?.materialOptions?.options.First().materialId.GetHashCode();
            if (!matType.HasValue) return;

            BuilderTableNetworking.instance.RequestCreatePiece(id, pos, Quaternion.identity, matType.Value);
        }
    }
}
